import sys
#import os
#import xlrd
import glob

if len(sys.argv)<2:
        print ""
        print "   This is a program to calculate multiworm tracker experiment data"
        print "   This is a slim version, will not work on a directory contain only"
        print "the image files. It need the .DAT files"
        print "   If the .DAT files haven't been calculated, you should use the full"
        print "version MWT.exe to generate them ONLY ONCE FIRST!"
        print "====================================="
        print "Usage: MWTs <path> <time thershold>"
        print "OR:"
        print "Usage: MWTs <path>"
        print "====================================="
        print "   <path>: full path to where .dat files are WITHOUT FINAL", "\\","!!"
        print "e.g: K:\\Folder\\20120223_151715"
        print "   <time thershold>: if a worm stops for a duration less than it"
        print "it will not be consider as paused. Unit: seconds"
        print "   If <time thershold> is omitted, default value is 10 seconds."
        print ""
        print "C-T Zhu, 2012/2/27"
else:
        #------------------------------
        def Dpause(input_file_path_name, sleep_time_thershold=10):
        
                data=list()
                lines=open(input_file_path_name).readlines()
                for item in lines:
                        a=item.replace("\n","")
                        if "NaN" not in a:
                                a=a.split(" ")
                                b=[float(jtem) for jtem in a]
                                data.append(b)
                
                length=len(data)-1
                                
                T_wake=list()
                T_stop=list()
                T_travel=0
                T_time=0
                A_speed=0
                T_total=0
                D_pause=list()
                D_pauseT=list() 
                        
                if length>0:
                        for i in range (1, length):
                                if data[i-1][5]==0 and abs(data[i][5])==1:
                                        T_wake.append(data[i][3])
                                if data[i][5]==0 and abs(data[i-1][5])==1:
                                        T_stop.append(data[i][3])
                                if abs(data[i][5])==1 and (data[i][1] or data[i-1][1] or data[i-1][5]):
                                        T_travel=T_travel+(data[i][3]-data[i-1][3])*data[i][1]
                                        T_time=T_time+(data[i][3]-data[i-1][3])
                        
                                 
                        if len(T_wake)*len(T_stop)==0:
                                D_pause=list()
                        elif len(T_stop)>len(T_wake):
                                for j in range(len(T_wake)):
                                        D_pause.append(T_wake[j]-T_stop[j])
                        elif len(T_stop)<len(T_wake):
                                for j in range(len(T_stop)):
                                        D_pause.append(T_wake[j+1]-T_stop[j])
                        elif T_wake[0]-T_stop[0]>0:
                                for j in range(len(T_wake)):
                                        D_pause.append(T_wake[j]-T_stop[j])
                        else:
                                for j in range(len(T_wake)):
                                        D_pause.append(T_stop[j]-T_wake[j])
                                        
                        
                        for item in D_pause:
                                if item>=sleep_time_thershold:
                                        D_pauseT.append(item)
                                        
                        T_total=data[-1][3]-data[0][3]
                        A_speed=T_travel/T_time
                                
                return T_total, A_speed, sum(D_pauseT), len(D_pauseT), D_pauseT
                
        #------------------------------ 
        result=list()
        result.append(["Total_time","AVG_Speed","Total_pausing_time","No._pause","Dur_each_P"])
        path=sys.argv[1]
        #command1='java -Xmx512M -jar '+'Chore.jar'+' -p 0.02727 -M 2 -s 0.1 -S --shadowless -t 20 -N all -o nss*tmb --plugin Reoutline --plugin Respine '
        #command2=' --map -O 900s'
        #command3=os.system(command1+path+command2)
        
        if len(sys.argv)>2:
                t=float(sys.argv[2])
        else:
                t=10
        #print sys.argv[1]
        #print sys.argv[2]
        #path=r"K:\Folder\20120223_151715"
        fnames=glob.glob(path+'/*.dat')
        outfn='/result'+str(t)+'.txt'
        outfile=open(path+outfn, 'w')
        
        for item in fnames:
                [x1,x2,x3,x4,x5]=Dpause(item,t)
                x5.insert(0,x4)
                x5.insert(0,x3)
                x5.insert(0,x2)
                x5.insert(0,x1)
                result.append(x5)

        print>>outfile, '\t'.join(result[0])
        for i in range(1,len(result)):
                for j in range(0, len(result[i])):
                        result[i][j]="%.4f" %result[i][j]
                print>>outfile, '\t'.join(result[i])
        outfile.close()
        
